# Simple workflow for deploying static content to GitHub Pages
name: Deploy static content to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Single deploy job since we're just deploying
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Setup Emscripten
        uses: mymindstorm/setup-emsdk@v14
        with:
          version: latest
          actions-cache-folder: 'emsdk-cache'
      
      - name: Verify Emscripten Installation
        run: emcc --version
      
      - name: Create Build Directory
        run: mkdir build
      
      - name: Configure CMake
        run: |
          cd build
          emcmake cmake ..
      
      - name: Build
        run: |
          cd build
          emmake make
          ls -la
      
      - name: Prepare Deployment Files
        run: |
          mkdir -p dist
          # Copy build artifacts
          if [ -f "build/terminal.wasm" ]; then
            cp build/terminal.wasm dist/
          else
            echo "terminal.wasm not found in build directory"
            exit 1
          fi
          if [ -f "build/terminal.js" ]; then
            cp build/terminal.js dist/terminal.generated.js
          else
            echo "terminal.js not found in build directory"
            exit 1
          fi
          # Copy source files
          cp terminal.js dist/
          cp config.js dist/
          cp index.html dist/
          
          echo "Contents of dist directory:"
          ls -la dist/
      
      - name: Setup Pages
        uses: actions/configure-pages@v4
      
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: 'dist'
      
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
